{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetExchangesQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","coins","filteredData","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoName","cryptoPrice","cryptoRank","cryptoVolume","volume","cryptoMarketCap","allTimeHighPrice","allTimeHigh","cryptoNumberOfMarkets","numberOfMarkets","cryptoNumberOfExchanges","numberOfExchanges","cryptoApprovedSupply","approvedSupply","cryptoTotalSupply","totalSupply","cryptoCirculatingSupply","circulatingSupply","cryptoDescription","description","cryptoLinks","links","stats","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","TrophyOutlined","genericStats","CheckOutlined","StopOutlined","ExclamationCircleOutlined","defaultValue","date","HTMLReactParser","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","span","exchange","showArrow","header","marketShare","Homepage","console","log","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","desription","substring","provider","moment","dataPublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.8ff428dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect }  from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] =useState(true);\r\n    const [screenSize, setScreenSize] =useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n        window.addEventListener('resize', handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(screenSize < 768){\r\n            setActiveMenu(false);\r\n        }else{\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize])\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">CryptoMania</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n                {activeMenu && (\r\n                <Menu theme=\"yellow\"> \r\n                {/* blue ald de dark */}\r\n                    <Menu.Item icon={<HomeOutlined />}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n                )}\r\n                  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"8994882124msh78a5a277639fde5p119aedjsnda12541bc108\",\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(\"/exchanges\"),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetExchangesQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import React from 'react'\r\nimport { Spin } from 'antd'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <Spin />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useEffect, useState } from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [ searchTerm, setSearchTerm] = useState('')\r\n\r\n    useEffect(() => {\r\n        setCryptos(cryptosList?.data?.coins);\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData);\r\n    }, [cryptosList, searchTerm]);\r\n\r\n    // console.log(cryptos)\r\n    if(isFetching) return <Loader />\r\n\r\n    return (\r\n        <>\r\n        {!simplified && (\r\n            <div className=\"search-crypto\">\r\n                <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n            </div>\r\n        )}\r\n       \r\n           <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n               {cryptos?.map((currency) => (\r\n                   <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                       <Link to={`/crypto/${currency.id}`}>\r\n                           <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"\" />} hoverable>\r\n                               <p>Price: {millify(currency.price)}</p>\r\n                               <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                               <p>Daily Change: {millify(currency.change)}%</p>\r\n                           </Card>\r\n                       </Link>\r\n                   </Col>\r\n               ))}\r\n           </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1){\r\n        coinPrice.push(coinHistory.data.history[i].price)\r\n        coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n       labels: coinTimestamp, \r\n       datasets: [\r\n           {\r\n               label: 'Price in USD',\r\n               data : coinPrice,\r\n               fill: false,\r\n               backgroundColor: '#0071bd',\r\n               borderColor: '#0071bd'\r\n           }\r\n       ]\r\n    }\r\n\r\n    const options = {\r\n        scales:{\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price chart</Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timePeriod, setTimePeriod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId)\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timePeriod})\r\n    const cryptoName = data?.data?.coin.name;\r\n    const cryptoPrice = data?.data?.coin.price;\r\n    const cryptoRank = data?.data?.coin.rank;\r\n    const cryptoVolume = data?.data?.coin.volume;\r\n    const cryptoMarketCap = data?.data?.coin.marketCap;\r\n    const allTimeHighPrice = data?.data?.coin?.allTimeHigh?.price\r\n\r\n    const cryptoNumberOfMarkets = data?.data?.coin.numberOfMarkets\r\n    const cryptoNumberOfExchanges = data?.data?.coin.numberOfExchanges\r\n    const cryptoApprovedSupply = data?.data?.coin.approvedSupply\r\n    const cryptoTotalSupply = data?.data?.coin.totalSupply\r\n    const cryptoCirculatingSupply = data?.data?.coin.circulatingSupply\r\n\r\n    const cryptoDescription = data?.data?.coin.description\r\n    const cryptoLinks = data?.data?.coin.links\r\n\r\n   \r\nif(isFetching) return <Loader />;\r\n    //   console.log(data);\r\n    //    console.log(cryptoPrice);\r\n    //    console.log(cryptoRank)\r\n    //   console.log(allTimeHighPrice);\r\n    //   console.log(history);\r\n    //   console.log(links)\r\n\r\n   const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n     { title: 'Price to USD', value: `$ ${cryptoPrice && millify(cryptoPrice)}`, icon: <DollarCircleOutlined /> },\r\n     { title: 'Rank', value: cryptoRank, icon: <NumberOutlined /> },\r\n     { title: '24h Volume', value: `$ ${cryptoVolume && millify(cryptoVolume)}`, icon: <ThunderboltOutlined /> },\r\n     { title: 'Market Cap', value: `$ ${cryptoMarketCap && millify(cryptoMarketCap)}`, icon: <DollarCircleOutlined /> },\r\n { title: 'All-time-high(daily avg.)', value: `$ ${millify(allTimeHighPrice)}`, icon: <TrophyOutlined />},\r\n  ]\r\n\r\n   const genericStats = [\r\n       { title: 'Number Of Markets', value: cryptoNumberOfMarkets, icon: <FundOutlined /> },\r\n       { title: 'Number Of Exchanges', value: cryptoNumberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n       { title: 'Aprroved Supply', value: cryptoApprovedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n       { title: 'Total Supply', value: `$ ${millify(cryptoTotalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n       { title: 'Circulating Supply', value: `$ ${millify(cryptoCirculatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n   ]\r\n\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n             <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {cryptoName} ({cryptoName}) Price\r\n                </Title>\r\n                <p>\r\n                    {cryptoName} live price in US dollars.\r\n                    View value statistics, market cap and supply.\r\n                </p>\r\n            </Col>\r\n            <Select \r\n            defaultValue=\"7d\" \r\n            className=\"select-timeperiod\" \r\n            placeholder=\"Select Time Period\" \r\n            onChange={(value) => setTimePeriod(value)}>\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n<LineChart coinHistory={coinHistory} currentPrice={millify(cryptoPrice)} coinName={cryptoName}/>\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">\r\n                            {cryptoName} Value statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of {cryptoName}\r\n                        </p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value}) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n{/* other stats information */}\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">\r\n                            Other statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of all cryptocurrencies\r\n                        </p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value}) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        what is {cryptoName}\r\n                        {HTMLReactParser(cryptoDescription)}\r\n                    </Title>\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        {cryptoName} Links\r\n                    </Title>\r\n                    {cryptoLinks.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">\r\n                                {link.type}\r\n                            </Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                {link.name}\r\n                            </a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col> \r\n            \r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nexport const Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          \r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n              key={exchange.id}\r\n              showArrow={false}\r\n              header={(\r\n                <Row key={exchange.id}>\r\n                  <Col span={6}>\r\n                    <Text><strong>{exchange.rank}</strong></Text>\r\n                    <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                    <Text><strong>{exchange.name}</strong></Text>\r\n                  </Col>\r\n                  <Col span={6}>{millify(exchange.volume)}</Col>\r\n                  <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                  <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                </Row>\r\n              )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Exchanges\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Typography, Row, Col, Statistic } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { Cryptocurrencies, News } from '../components'\r\nimport Loader from './Loader';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n\r\n     console.log(data);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if(isFetching) return <Loader />\r\n\r\n    return (\r\n        <>\r\n          <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n          <Row gutter={[32, 32]}>\r\n            <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={millify(globalStats.total)} /></Col>\r\n            <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n            <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\r\n            <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\r\n           \r\n            <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n          </Row>\r\n          <div className=\"home-heading-container\">\r\n              <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n              <Title level={3} className=\"show-more\"><Link to='/cryptocurrencies'>Show More</Link></Title>\r\n          </div>\r\n          <Cryptocurrencies simplified/>\r\n          <div className=\"home-heading-container\">\r\n              <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n              <Title level={3} className=\"show-more\"><Link to='/news'>Show More</Link></Title>\r\n          </div>\r\n          <News simplified/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-key\": \"57c70944e9mshceb81b6f7fcf433p1beddbjsnf4a64a893c0a\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState } from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd'\r\nimport moment from 'moment';\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News'\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12})\r\n    const { data } = useGetCryptosQuery(100);\r\n    console.log(cryptoNews)\r\n\r\n    if(!cryptoNews?.value) return <Loader />\r\n\r\n    return (\r\n        <Row gutter={[ 24, 24 ]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select showSearch className=\"select-news\" placeholder=\"Select a Crypto\" optionFilterProp=\"children\" onChange={(value) => setNewsCategory(value)} filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}> \r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n           {cryptoNews.value.map((news, i) => (\r\n               <Col xs={24} sm={12} lg={8} key={i}>\r\n                   <Card hoverable className=\"news-card\">\r\n                       <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                           <div className=\"news-image-container\">\r\n                               <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                               <img style={{maxWidth: \"200px\", maxHeight: \"100px\" }} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\r\n                           </div>\r\n                           <p>\r\n                           {news.description > 100\r\n                            ? `${news.desription.substring(0, 100)}...`\r\n                            :news.description\r\n                           }\r\n                           </p>\r\n                           <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>    \r\n                                    <Text>{moment(news.dataPublished).startOf('ss').fromNow()}</Text>\r\n                                \r\n                           </div>\r\n                       </a>\r\n                   </Card>\r\n               </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, Space } from \"antd\";\r\n\r\nimport {\r\n  Navbar,\r\n  Exchanges,\r\n  Homepage,\r\n  Cryptocurrencies,\r\n  News,\r\n  CryptoDetails,\r\n} from \"./components\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Homepage />\r\n              </Route>\r\n              <Route exact path=\"/exchanges\">\r\n                <Exchanges />\r\n              </Route>\r\n              <Route exact path=\"/cryptocurrencies\">\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route exact path=\"/crypto/:coinId\">\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route exact path=\"/news\">\r\n                <News />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Layout>\r\n\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            CryptoMania <br />\r\n            All rights reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            <Link to=\"/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}